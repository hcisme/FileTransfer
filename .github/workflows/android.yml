name: Android Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送 v 开头的标签时触发（如 v1.0.0）
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17  # Android需要JDK17+
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    # 还原签名密钥
    - name: Restore Keystore
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > FileTransferAndroid/release.keystore
        echo "密钥文件位置: $(pwd)/FileTransferAndroid/release.keystore"
        ls -la FileTransferAndroid/
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

    # 设置签名环境变量
    - name: Setup signing variables
      run: |
        echo "RELEASE_STORE_FILE=release.keystore" >> $GITHUB_ENV
        echo "RELEASE_STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
        echo "RELEASE_KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
        echo "RELEASE_KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: FileTransferAndroid  # 指定工作目录

    - name: Verify keystore exists
      run: |
        echo "检查密钥文件是否存在..."
        ls -la
        if [ -f "release.keystore" ]; then
          echo "✅ 找到 release.keystore 文件"
          echo "文件大小: $(du -h release.keystore | cut -f1)"
        else
          echo "❌ 错误：release.keystore 文件不存在！"
          ls -la
          exit 1
        fi
      working-directory: FileTransferAndroid  # 指定工作目录

    - name: Build Release APK
      run: ./gradlew assembleRelease -stacktrace
      working-directory: FileTransferAndroid  # 指定工作目录
      env:
        ORG_GRADLE_PROJECT_RELEASE_STORE_FILE: ${{ env.RELEASE_STORE_FILE }}
        ORG_GRADLE_PROJECT_RELEASE_STORE_PASSWORD: ${{ env.RELEASE_STORE_PASSWORD }}
        ORG_GRADLE_PROJECT_RELEASE_KEY_ALIAS: ${{ env.RELEASE_KEY_ALIAS }}
        ORG_GRADLE_PROJECT_RELEASE_KEY_PASSWORD: ${{ env.RELEASE_KEY_PASSWORD }}

    # 上传APK到Release
    - name: Upload APK to Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')  # 仅在标签推送时执行
      with:
        files: FileTransferAndroid/app/build/outputs/apk/release/*.apk
        generate_release_notes: true
