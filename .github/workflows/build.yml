name: Multi-Project Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: ['master']

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Restore Android Keystore
        run: |
          KEYSTORE_PATH="$GITHUB_WORKSPACE/release.keystore"
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > "$KEYSTORE_PATH"
          echo "Android keystore: $KEYSTORE_PATH"
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Setup Android signing variables
        run: |
          KEYSTORE_PATH="$GITHUB_WORKSPACE/release.keystore"
          echo "RELEASE_STORE_FILE=$KEYSTORE_PATH" >> $GITHUB_ENV
          echo "RELEASE_STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "RELEASE_KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          echo "RELEASE_KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV

      - name: Grant execute permissions of gradlew
        run: chmod +x FileTransferAndroid/gradlew

      - name: Build Android Release APK
        run: ./gradlew assembleRelease --stacktrace
        working-directory: FileTransferAndroid
        env:
          ORG_GRADLE_PROJECT_RELEASE_STORE_FILE: ${{ env.RELEASE_STORE_FILE }}
          ORG_GRADLE_PROJECT_RELEASE_STORE_PASSWORD: ${{ env.RELEASE_STORE_PASSWORD }}
          ORG_GRADLE_PROJECT_RELEASE_KEY_ALIAS: ${{ env.RELEASE_KEY_ALIAS }}
          ORG_GRADLE_PROJECT_RELEASE_KEY_PASSWORD: ${{ env.RELEASE_KEY_PASSWORD }}

      - name: Upload Android APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: FileTransferAndroid/app/build/outputs/apk/release/*.apk
          retention-days: 1

  build-node:
    name: Build Node Executable
    runs-on: ubuntu-latest
    needs: build-android

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        working-directory: FileTransferBrowser

      - name: Build executable
        run: npm run build
        working-directory: FileTransferBrowser

      - name: Upload Node executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-exe
          path: FileTransferBrowser/dist/filetransferbrowser.exe
          retention-days: 1

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-android, build-node] # 等待两个构建完成
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download Android APK artifact
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: artifacts/android

      - name: Download Node EXE artifact
        uses: actions/download-artifact@v4
        with:
          name: node-exe
          path: artifacts/node

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ### 本次更新内容
            - 提升gradlew执行权限
          files: |
            artifacts/android/*.apk
            artifacts/node/filetransferbrowser.exe

      - name: Setup current datetime
        id: dates
        run: echo "datetime=$(date '+%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_OUTPUT

      - name: Get previous tag
        id: prev-tag
        run: |
          PREV_TAG=$(git describe --abbrev=0 --tags ${{ github.ref_name }}^ 2>/dev/null || echo "")
          echo "tag=${PREV_TAG:-v0.0.0}" >> $GITHUB_OUTPUT

      - name: Delete Artifacts Immediately
        run: |
          # 删除本地副本
          rm -rf artifacts

          # 通过API删除远程工件
          curl -X DELETE \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts?name=android-apk"
            
          curl -X DELETE \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts?name=node-exe"
